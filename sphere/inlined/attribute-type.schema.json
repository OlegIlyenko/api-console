{
  "$schema":"http://json-schema.org/draft-04/schema#",
  "title":"Attribute Type",
  "type":"object",
  "required":["name"],
  "oneOf":[{
    "title":"BooleanType",
    "type":"object",
    "description":"Valid values for the attribute are true and false (JSON Boolean).",
    "properties":{
      "name":{
        "type":"string",
        "enum":["boolean"]
      }
    }
  },{
    "title":"TextType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["text"]
      }
    }
  },{
    "title":"LocalizableTextType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["ltext"]
      }
    }
  },{
    "title":"EnumType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["enum"]
      },
      "values":{
        "type":"array",
        "items":{
          "title":"Plain Enum Value",
          "type":"object",
          "properties":{
            "key ":{
              "type":"string",
              "description":"The key of the value used as a programmatic identifier, e.g. in facets & filters."
            },
            "label":{
              "type":"string",
              "description":"A descriptive label of the value."
            }
          }
        }
      }
    }
  },{
    "title":"LocalizableEnumType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["lenum"]
      },
      "values":{
        "type":"array",
        "items":{
          "title":"Localized Enum Value",
          "type":"object",
          "properties":{
            "key ":{
              "type":"string",
              "description":"The key of the value used as a programmatic identifier, e.g. in facets & filters."
            },
            "label":{
              "title":"LocalizedString",
              "description":"A localized string is a JSON object where the keys are ISO language tags, and the values the corresponding strings used for that language",
              "type":"object",
              "patternProperties":{
                "^[a-z]{2}$":{
                  "type":"string",
                  "description":"The value for this language"
                }
              }
            }
          }
        }
      }
    }
  },{
    "title":"NumberType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["number"]
      }
    }
  },{
    "title":"MoneyType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["money"]
      }
    }
  },{
    "title":"DateType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["date"]
      }
    }
  },{
    "title":"TimeType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["time"]
      }
    }
  },{
    "title":"DateTimeType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["datetime"]
      }
    }
  },{
    "title":"ReferenceType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["reference"]
      },
      "referenceTypeId":{
        "title":"Reference Type Id",
        "type":"string",
        "enum":["product","product-type","category","tax-category","customer","customer-group","cart","order","channel","state","product-discount"]
      }
    }
  },{
    "title":"SetType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["set"]
      },
      "elementType":{
        "$ref":"#"
      }
    }
  },{
    "title":"NestedType",
    "type":"object",
    "properties":{
      "name":{
        "type":"string",
        "enum":["nested"]
      },
      "typeReference":{
        "title":"Reference",
        "description":"A `Reference` is a JSON object representing a (loose) reference to another resource on SPHERE.IO platform",
        "type":"object",
        "properties":{
          "typeId ":{
            "type":"string",
            "description":"The typeId designates the type of the referenced resource",
            "enum":["product","product-type","category","tax-category","customer","customer-group","cart","order","channel","state","product-discount"]
          },
          "id":{
            "type":"string",
            "description":"The unique ID of the referenced resource"
          }
        }
      }
    }
  }]
}