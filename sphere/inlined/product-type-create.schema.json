{
  "$schema":"http://json-schema.org/draft-04/schema#",
  "title":"Create a Product Type",
  "type":"object",
  "required":["name","description"],
  "properties":{
    "customerNumber":{
      "type":"string",
      "description":"String that uniquely identifies a customer. It can be used to create more human-readable (in contrast to ID) identifier for the customer. It should be unique across a project. Once it's set it cannot be changed."
    },
    "name":{
      "type":"string"
    },
    "description":{
      "type":"string"
    },
    "attributes":{
      "type":"array",
      "items":{
        "title":"Attribute Type",
        "type":"object",
        "properties":{
          "type":{
            "title":"Attribute Type",
            "type":"object",
            "required":["name"],
            "oneOf":[{
              "title":"BooleanType",
              "type":"object",
              "description":"Valid values for the attribute are true and false (JSON Boolean).",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["boolean"]
                }
              }
            },{
              "title":"TextType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["text"]
                }
              }
            },{
              "title":"LocalizableTextType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["ltext"]
                }
              }
            },{
              "title":"EnumType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["enum"]
                },
                "values":{
                  "type":"array",
                  "items":{
                    "title":"Plain Enum Value",
                    "type":"object",
                    "properties":{
                      "key ":{
                        "type":"string",
                        "description":"The key of the value used as a programmatic identifier, e.g. in facets & filters."
                      },
                      "label":{
                        "type":"string",
                        "description":"A descriptive label of the value."
                      }
                    }
                  }
                }
              }
            },{
              "title":"LocalizableEnumType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["lenum"]
                },
                "values":{
                  "type":"array",
                  "items":{
                    "title":"Localized Enum Value",
                    "type":"object",
                    "properties":{
                      "key ":{
                        "type":"string",
                        "description":"The key of the value used as a programmatic identifier, e.g. in facets & filters."
                      },
                      "label":{
                        "title":"LocalizedString",
                        "description":"A localized string is a JSON object where the keys are ISO language tags, and the values the corresponding strings used for that language",
                        "type":"object",
                        "patternProperties":{
                          "^[a-z]{2}$":{
                            "type":"string",
                            "description":"The value for this language"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },{
              "title":"NumberType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["number"]
                }
              }
            },{
              "title":"MoneyType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["money"]
                }
              }
            },{
              "title":"DateType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["date"]
                }
              }
            },{
              "title":"TimeType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["time"]
                }
              }
            },{
              "title":"DateTimeType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["datetime"]
                }
              }
            },{
              "title":"ReferenceType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["reference"]
                },
                "referenceTypeId":{
                  "title":"Reference Type Id",
                  "type":"string",
                  "enum":["product","product-type","category","tax-category","customer","customer-group","cart","order","channel","state","product-discount"]
                }
              }
            },{
              "title":"SetType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["set"]
                },
                "elementType":{
                  "$ref":"#"
                }
              }
            },{
              "title":"NestedType",
              "type":"object",
              "properties":{
                "name":{
                  "type":"string",
                  "enum":["nested"]
                },
                "typeReference":{
                  "title":"Reference",
                  "description":"A `Reference` is a JSON object representing a (loose) reference to another resource on SPHERE.IO platform",
                  "type":"object",
                  "properties":{
                    "typeId ":{
                      "type":"string",
                      "description":"The typeId designates the type of the referenced resource",
                      "enum":["product","product-type","category","tax-category","customer","customer-group","cart","order","channel","state","product-discount"]
                    },
                    "id":{
                      "type":"string",
                      "description":"The unique ID of the referenced resource"
                    }
                  }
                }
              }
            }],
            "description":"Describes the type of the attribute."
          },
          "name":{
            "type":"string",
            "description":"The unique name of the attribute used in the API. The name must be between two and 36 characters long and can contain the ASCII letters A to Z in lowercase or uppercase, digits, underscores (_) and the hyphen-minus (-)."
          },
          "label":{
            "title":"LocalizedString",
            "description":"A localized string is a JSON object where the keys are ISO language tags, and the values the corresponding strings used for that language",
            "type":"object",
            "patternProperties":{
              "^[a-z]{2}$":{
                "type":"string",
                "description":"The value for this language"
              }
            },
            "description":"A human-readable label for the attribute."
          },
          "isRequired":{
            "type":"boolean",
            "description":"Whether the attribute is required to have a value."
          },
          "attributeConstraint":{
            "title":"Attribute Constraint",
            "type":"string",
            "enum":["None","CombinationUnique","SameForAll"],
            "description":"Describes how an attribute or a set of attributes should be validated across all variants of a product."
          },
          "inputHint":{
            "title":"Text Input Hint",
            "type":"string",
            "enum":["SingleLine","MultiLine"],
            "description":"Provides a visual representation type for this attribute."
          },
          "displayGroup":{
            "title":"Display Group",
            "type":"string",
            "enum":["General","Prices","Images","Categories","Variants","Inventory","Other"],
            "description":"UI hint telling in which group an edit control for an attribute should be displayed."
          },
          "isSearchable":{
            "type":"boolean",
            "description":"Whether the attribute's values should generally be enabled in product search. This determines whether the value is stored in products for matching terms in the context of full-text search queries and can be used in facets & filters as part of product search queries. The exact features that are enabled/disabled with this flag depend on the concrete attribute type and are described there."
          }
        }
      }
    }
  }
}